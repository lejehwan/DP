package factory_pattern;

public class Example {

    public static void main(String[] args) {
        /**
         * 팩토리 패턴의 핵심
         *
         * 객체 생성의 캡슐화: new 키워드를 사용하는 대신, 팩토리를 통해 객체를 생성함으로써 객체 생성 로직을 한곳에 모아 관리
         * 느슨한 결합: 클라이언트 코드가 구체적인 객체 구현에 직접 의존하지 않고, 인터페이스나 추상클래스를 통해 팩토리에 의존함으로써 코드의 유연성과 확장성을 높임
         * 확장성: 새로운 객체 유형이 추가될 때, 기존 코드를 변경하지 않고 새오운 클래스를 추가하여 시스템을 확장 할 수 있음
         */
    }
    
}
